function [ treelist ] = build( data )
%BUILD Erstellt rekursiv einen Baum, nach nach Varianz.
%   Erstellt rekursiv einen Baum, nach nach Varianz. Ausgabe ist eine 
%   Matrix. Eingabe der Rohdaten (Zeilenweise Angaben). Für genauere 
%   Angaben bitte die Kommentare im Quelltext beachten.

    sze = size(data);           % sze ist Zeilen mal Spalten
    
    if (sze <= 2)
        return
    end
    
    matrix = zeros(sze, 3);     % Erstellt eine Matrix mit der Größe 3 x sze
    v = var(data);            % Berechnet automatisch die Varianz

    if ( v(1) >= v(2) )
        sortrows(data, 1);
        matrix(1, 3) = 1;    % wenn 1 dann nach x geteilt
    else 
        sortrows(data, 2);
        matrix(1, 3) = 1;    % wenn 1 dann nach y geteilt
    end

    mid = floor(sze/2);
    disp(mid);
    matrix(1,1:2) = data(mid(1),1:2);
    
    left = data(1:mid(1)-1, :);
    right = data(mid(1)+1:end, :);
    
    matrix1 = nextnode(left, 2, matrix);
    matrix2 = nextnode(right, 3, matrix1);
    
    treelist = matrix2;

end

function [matrix3] = nextnode( data, n, matrix )

    sze = size(data);
    
    if (sze > 2)
        v = var(data);

        mid = floor(sze/2);

        if ( v(1) >= v(2) )
            sortrows(data, 1);
            matrix(n, 3) = 1;    % wenn 1 dann nach x geteilt
        else 
            sortrows(data, 2);
            matrix(n, 3) = 2;    % wenn 2 dann nach y geteilt
        end


        matrix(n, 1:2) = data(mid(1), 1:2);

        matrix1 = nextnode(left, ((n*2)), matrix);
        matrix2 = nextnode(right, ((n*2)+1), matrix1);
        
        matrix3 = matrix2;
        
    elseif (sze == 2)
        v = var(data);
        if ( v(1) >= v(2) )
            sortrows(data, 1);
            matrix(n, 3) = 1;    % wenn 1 dann nach x geteilt
        else 
            sortrows(data, 2);
            matrix(n, 3) = 2;    % wenn 2 dann nach y geteilt
        end
        
        matrix(n,1:2) = data(1,1:2);
        matrix(n*2,1:2) = data(2,1:2);
        
        matrix3 = 
    elseif (sze == 1)
        matrix(n,1:2) = data(1,1:2);
    end
end 

